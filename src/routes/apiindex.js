const express = require('express')
const cors = require('cors');
require('dotenv').config()
const { checkToken } = require('../Middleware/JWTAction')
const { checkTokenAdmin } = require('../Middleware/JWTAdmin')
const  uploadFile  = require('../Middleware/Upload')
const  { checkAuth }  = require('../Middleware/checkAuth')
const  { PayMethod }  = require('../Middleware/PayMethod')
const  { checkPhone, checkInfoBill }  = require('../Middleware/checkPhone')
const  { Respon }  = require('../Middleware/Respon')
const  { checkTokenOrder }  = require('../Middleware/JWTOrder')
const  { CheckPayOrder, OrderStatus }  = require('../Middleware/CheckPayOrder')
// const  { checkPayMethod }  = require('../Middleware/checkPayMethod')
const  { checkAutoRep, OnAutoRep, AutoRepComment }  = require('../Middleware/checkAutoRep')
const  { checkOpen, OnOpen, checkStatus }  = require('../Middleware/checkOpen')
const ProductController = require('../Controllers/ProductController')
const UserController = require('../Controllers/UserController')
const OrderController = require('../Controllers/OrderController')
const BillController = require('../Controllers/BillController')
const ImgController = require('../Controllers/ImgController')
const CardController = require('../Controllers/CardController')
const NotifiController = require('../Controllers/NotifiController')
const ChatController = require('../Controllers/ChatController')
const CommentController = require('../Controllers/CommentController')
const RecommenderSystem = require('../Controllers/RecommenderSystem')
let router = express.Router()
const apiRoute = (app) => {
  // 
  router.get('/showproduct',ProductController.showProduct)
  router.get('/showcategori',ProductController.showCategori)
  router.get('/showtype',ProductController.showType)
  router.get('/showmenu',ProductController.showMenu)
  router.get('/showdetailtypes',ProductController.showDetailType)
  router.get('/showbestellerCategoris',ProductController.showBestSellerCate)
  router.get('/showcomment',CommentController.showComment)
  router.post('/verifyregister',checkAuth,UserController.verifyOTPRegister)
  router.post('/updatepassregister',checkPhone,UserController.updatePassRegister)
  router.get('/getuserlogin',checkTokenAdmin,UserController.getUserLogin)
  router.post('/login',checkAuth,UserController.login)
  router.post('/addcard',checkTokenAdmin,CardController.addCard)
  router.delete('/deletecard',checkTokenAdmin,CardController.deleteCard)
  router.get('/showlengthcard',checkTokenAdmin,CardController.showLengthCard)
  router.get('/showcard',checkTokenAdmin,CardController.showCard)
  router.post('/checkvoucher',checkTokenAdmin,ProductController.voucher)
  router.get('/showbill',checkTokenAdmin,BillController.showBill)
  router.get('/getbill',checkTokenAdmin,BillController.getBill)
  router.get('/getallpricebill',checkTokenAdmin,BillController.getPriceBillDate)
  router.get('/getinfobillproduct',checkTokenAdmin,BillController.AllBIll)
  router.put('/updatevisible',ProductController.updateVisible)
  router.get('/showcommentuser',checkTokenAdmin,CommentController.showCommentUser)





  // 
  // Admin type
  router.get('/getallbilldate',checkTokenAdmin,BillController.getAllBillDate)
  router.get('/showtypeadmin',ProductController.showTypeAdmin)
  router.post('/createtypes',ProductController.createType)
  router.put('/updatetype',ProductController.updateType)
  // Admin product
  router.get('/showlenghtproduct',ProductController.showLenghtProduct)
  router.get('/showproductadmin',ProductController.showProductAdmin)
  router.post('/createproduct',checkToken,uploadFile.single('file'),ProductController.createProduct)
  router.put('/updateproduct',checkToken,uploadFile.single('fileupdate'),ProductController.updateProduct)
  router.put('/editproduct',checkToken,ProductController.editProduct)
  // Admin menu
  router.post('/loginadmin',UserController.loginAdmin)
  router.delete('/deletemenu/:IdMenu',ProductController.deleteMenu)
  router.post('/createmenu',ProductController.createMenu)
  // Admin Categori
  router.get('/filtercategori',ProductController.filterCategori)
  router.put('/updatecategori',ProductController.updateCategori)
  router.post('/createcategori',ProductController.createCategori)
  router.post('/deletecategoris',ProductController.deleteCategoris)
  // Product
  router.post('/showproductid',ProductController.showProductId)
  router.get('/getproducthottrend',checkTokenAdmin,BillController.getProductHottrend)
  router.post('/deleteproduct',ProductController.deleteproduct)
  router.post('/deletedetailproducts',ProductController.deleteDetailProduct)
  router.get('/showbestseller',ProductController.showBestSeller)
  router.get('/showdetailproduct',ProductController.showDetailProduct)
  router.put('/updatedetailproduct',ProductController.updateDetailProduct)
  router.post('/createdetailproduct',ProductController.createDetailProduct)
  router.post('/showproducttypes',ProductController.showProductType)
  router.get('/showtable',ProductController.showTable)
  router.get('/showtableqr',ProductController.showTableQR)
  router.post('/showproductcate',ProductController.showProductCate)
  // Card
  // Type
  router.post('/createdetailtypes',ProductController.createDetailType)
  router.put('/updatedetailtype',ProductController.updateDetailType)
  router.post('/deletetype',ProductController.deleteType)
  router.post('/deletedetailtype',ProductController.deleteDetailType)
  // User
  router.post('/showuser',UserController.getUser)
  router.post('/addhistoryuser',checkToken,UserController.AddHistoryUser)
  router.get('/showaccount',UserController.showListUser)
  router.post('/createaccount',UserController.createAccount)
  router.post('/checkuser',UserController.checklogiUser)
  router.put('/updateinfo',checkToken,UserController.updateUser)
  router.post('/updateavt',checkToken,uploadFile.single('file'),UserController.updateAvt)
  router.get('/showalluser',UserController.getAllUser)
  router.post('/showuserid',UserController.getUserId)
  // Order
  router.post('/createtable',checkToken,OrderController.createTable)
  router.post('/deletetable',checkToken,OrderController.deleteTable)
  router.put('/updatetable',OrderController.updateTable)
  // router.put('/updateproductorder',checkTokenOrder,OrderController.updateProductOrder)
  router.put('/deleteproductorder',OrderController.deleteProductOrder)
  router.put('/updatebillorder',OrderController.updateBillOrder)
  router.post('/createbillorder',checkTokenOrder,OrderController.createBillOrder)
  router.post('/showbillorderuser',OrderController.showBillOrderUser) 
  // Bill
  router.post('/createbill',checkInfoBill,checkToken,checkOpen,PayMethod,BillController.createBill)
  router.post('/checkstatus',checkToken,checkStatus)
  router.post('/onOpen',checkToken,OnOpen)
  router.get('/shownotifi',checkTokenAdmin,NotifiController.ShowNotifi)
  router.post('/updatenoti',checkToken,NotifiController.updateNoti)
  router.put('/updatebill',checkToken,BillController.updateBill)
  router.post('/showbilluser',checkToken,BillController.showBillUser)
  router.post('/showallbill',checkToken,BillController.showAllBill)
  router.post('/showproductbill',checkToken,BillController.showProductBill)
  router.get('/countbill',BillController.CountBill)
  router.get('/sumtotalprice',BillController.TotalPrice)
  router.get('/avtuser/:user',ImgController.Avt)
  // Slide
  router.get('/header/:slide',ImgController.HeaderSlide)
  router.get('/bodyimg/:img',ImgController.BodyImg)
  router.get('/video/:video',ImgController.Video)
  router.get('/showslide',ImgController.getAllSlide)
  router.get('/showslidemini',ImgController.getAllSlideMini)
  router.get('/showimgbody',ImgController.getAllImgBody)
  router.get('/showimgpagenew',ImgController.getAllImgPageNew)
  router.get('/showimgproduct/:product',ImgController.getImgProduct)
  router.put('/updateslider',uploadFile.single('fileupdate'),ImgController.updateSlider)
  router.put('/updatelinkytb',ImgController.updateLinkYoutube)
  // Voucher
  router.get('/showallvoucher',UserController.getAllVoucher)
  router.post('/createvoucher',UserController.createVoucher)
  router.delete('/deletevoucher/:IdVoucher',ProductController.deleteVoucher)
  // Chat
  router.post('/showallchat',checkToken,ChatController.getAlUserChat)
  router.post('/showchat',checkToken,ChatController.getChat)
  router.get('/sendnoti',checkTokenAdmin,NotifiController.deleteNoti)
  // Comment
  router.post('/filtercomment',checkTokenAdmin,CommentController.filterComment)
  router.post('/showcommentorder',CommentController.showComment)
  router.post('/repcomment',checkToken,CommentController.createRepComment)
  router.post('/createcomment',checkToken,AutoRepComment,CommentController.createComment)
  router.post('/showcommentadmin',checkToken,CommentController.showCommentAdmin)
  router.post('/sendotp',checkAuth,UserController.sendOTP)
  router.post('/sendotpregister',checkAuth,UserController.sendOTPRegister)
  router.post('/verifyotp',checkAuth,UserController.verifyOTP)
  router.get('/recommendersystem',checkTokenAdmin,RecommenderSystem.RecommenderSystem)
  // router.post('/paymentzalo',PayMethod,BillController.createBill)
  router.post('/callback',Respon,BillController.UpdatePayBill)
  router.post('/CheckPayOrder',CheckPayOrder,BillController.UpdatePayBill)
  // router.post('/payment',PayMethod)
  // router.post('/text',UserController.text)
  // ORDER
  router.post('/createqr',checkToken,OrderController.createQR)
  router.get('/getproductorder',checkTokenOrder,OrderController.getProductOrder)
  router.get('/getcateorder',checkTokenOrder,OrderController.getCateOrder)
  router.get('/getproductbillorder',checkTokenOrder,OrderController.showProductOrder)
  router.get('/getproductbillordertable/:IdTable',checkTokenOrder,OrderController.showProductOrderAdmin)
  router.get('/getbillorder',checkTokenOrder,OrderController.showBillOrder)
  router.post('/filterproductcate',checkTokenOrder,OrderController.fillterProductCate)
  router.post('/checkAutoRep',checkToken,checkAutoRep)
  router.post('/onautorepcomment',checkToken,OnAutoRep)
  router.post('/apites1',OrderStatus)
  return ( 
      app.use(cors({
          origin: [process.env.IP_CLIENT, 'http://localhost:3000']
        })),
      app.use('/api/v12/',router)
    );
    
}
module.exports = apiRoute
